if not game:IsLoaded() then
    game.Loaded:Wait()
end

local validKeys = {
    ["Lqv5Y8Hd29MWcAz"] = true,
}

if not script_key or not validKeys[script_key] then
    game.Players.LocalPlayer:Kick("Whitelist error Invalid key. Please use the correct key.")
    return
end

local Projects = {
    ["Grow a Garden"] = {
        GameId = 7436755782;
        PlaceIds = {};
        Loader = "https://raw.githubusercontent.com/moilthink/script-r/refs/heads/main/grow";
    };
    ["Door"] = {
        GameId = 2440500124;
        PlaceIds = {};
        Loader = "https://raw.githubusercontent.com/moilthink/script-r/refs/heads/main/door";
    };
    ["Slap Battle"] = {
        GameId = 2380077519;
        PlaceIds = {};
        Loader = "https://raw.githubusercontent.com/moilthink/script-r/refs/heads/main/slap";
    };
    ["Pizza Place"] = {
        GameId = 47545;
        PlaceIds = {};
        Loader = "https://raw.githubusercontent.com/moilthink/script-r/refs/heads/main/pizza";
    };
    ["Dead Rails"] = {
        GameId = 7018190066;
        PlaceIds = {};
        Loader = "https://raw.githubusercontent.com/moilthink/script-r/refs/heads/main/rail";
    };
}

local NotificationBindable = Instance.new("BindableFunction")

NotificationBindable.OnInvoke = function(buttonPressed)
    if buttonPressed == "yes" then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/moilthink/script-r/refs/heads/main/universal"))()
    elseif buttonPressed == "no" then
        print("well")
    end
end

-- Create the notification
game.StarterGui:SetCore("SendNotification", {
    Title = "Execute Universal?",
    Text = "Optional",
    Duration = 5,  -- Time in seconds
    Callback = NotificationBindable,  -- Set the callback for the button click
    Button1 = "yes",  -- First button text ("yes")
    Button2 = "no",   -- Second button text ("no")
})

local Loaded = false
local gameId = game.GameId

for _, v in pairs(Projects) do
    if v.GameId == gameId then
        Loaded = true
        print("✅ Loader found for GameId:", gameId)
        loadstring(game:HttpGet(v.Loader))()
    end
end

if not Loaded then
    warn("❌ No loader found for this GameId:", gameId)
end
